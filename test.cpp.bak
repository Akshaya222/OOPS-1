//#include <stdio.h>
#include <iostream>
#include <cstring>
#include <vector>
#include <iterator>
#define DEBUG 1;
#ifdef DEBUG
  #define T 100
#endif
#define MK(x) std::cout << #x
 class String{
        char name[20];
        int count;
    public:
        String(char* n){
            std::strcpy(name ,n);
            count = 0;
        }
        inline int show_count(){ return count; }
        int operator == (String);
        int operator ++ (int);
        int operator ++();
 };

 //operator == overloading
 int String::operator == (String s){
     if(!std::strcmp(name, s.name))
        return 1;
     return 0;
 }

 //operator ++ overloading
 //postfix
 int String::operator ++ (int){
     count++;
     return count;
 }

 //prefix
 int String::operator ++ (){
     count++;
     return count;
 }

 int main(){
/*	std::cout<<"\nHello world\n";
    std::cout<<T;
    int helloworld =1;
    std::cout << MK(hello kjgjgb ) << '\n';
    std::cout << __TIME__;
    std::cout << __DATE__;

    std::vector<int> v,v1(2);
    std::cout << v.size() << " " << v.capacity() << std::endl;
    v.push_back(5);
    v.push_back(10);
    v.push_back(15);
    //std::cout << v[0] << " " << v.size() << " " << v.capacity();
    std::vector<int>::iterator i;
    std::cout << std::endl << v.max_size() << std::endl;
    for( i=v.begin(); i != v.end(); i++){
        std::cout << *i << std::endl;
    }*/
    char a[]="ankit", d[]="dimri";
    String s1(a),s2(d);
    int temp = 0;
    ++s1;
    temp = ++s1;
    ++s1;
    ++s1;
    temp = s1++;
    s1++;
    std::cout << s1.show_count() << std::endl << temp << std::endl;
    if(s1 == s2)
        MK(both strings are same);
    else
        MK(both strings are not same);
    return 0;
	}
